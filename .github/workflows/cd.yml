name: CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read

env:
  DOTNET_VERSION: 9.0.x
  STATUS_GIST_ID: 479024692dc528451f53707bff2b443a

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 2

      - name: Set up .NET
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Initialize
        run: .\build\run.ps1 --exclusive --target Initialize

      - name: Restore NuGet packages
        run: .\build\run.ps1 --exclusive --target RestoreNuGetPackages

      - name: Build
        run: .\build\run.ps1 --exclusive --target Build

      - name: Scan code
        run: .\build\run.ps1 --exclusive --target ScanCode

      - name: Run unit tests
        run: .\build\run.ps1 --exclusive --target RunUnitTests

      - name: Run mutation tests
        run: .\build\run.ps1 --exclusive --target RunMutationTests

      - name: Update status gists
        if: ${{ github.event_name == 'push' }}
        env:
          GH_TOKEN: ${{ secrets.GIST_TOKEN }}
        run: |
          gh gist edit ${{ env.STATUS_GIST_ID }} --filename lines-of-code.json .\tmp\lines-of-code.json
          gh gist edit ${{ env.STATUS_GIST_ID }} --filename maintainability.json .\tmp\maintainability.json
          gh gist edit ${{ env.STATUS_GIST_ID }} --filename test-coverage.json .\tmp\test-coverage.json
          gh gist edit ${{ env.STATUS_GIST_ID }} --filename mutation-score.json .\tmp\mutation-score.json

      - name: Create package
        if: ${{ github.event_name == 'push' && env.SRC_CHANGED == 'true' }}
        run: .\build\run.ps1 --exclusive --target CreatePackage

      - name: Publish to NuGet Gallery
        if: ${{ github.event_name == 'push' && env.SRC_CHANGED == 'true' }}
        run: >
          dotnet nuget push .\output\*.nupkg
          --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
